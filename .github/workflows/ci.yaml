name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  cabal:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - "9.8.2"
          - "9.10.1"
        os:
          - "macos-latest"
          - "ubuntu-latest"
          - "windows-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure
        run: cabal configure --enable-tests --ghc-options -Werror

      - name: Compile
        run: cabal build all

      - name: Unit tests
        run: cabal test unit --test-options '--hedgehog-tests 10000'

      - name: CLI Config tests
        run: cabal test cli-config

      - name: CLI Functional tests
        id: cli-functional
        run: cabal test cli-functional

      - uses: actions/upload-artifact@v3
        name: CLI Tests Upload
        if: ${{ failure() && steps.cli-functional.conclusion == 'failure' }}
        with:
          name: cli-tests-artifacts
          path: |
            lib/cli/test/Test/Cli/Functional/Delete/output/*
            lib/cli/test/Test/Cli/Functional/Insert/output/*
            lib/cli/test/Test/Cli/Functional/List/output/*
            lib/cli/test/Test/Cli/Functional/Update/output/*

      - name: Benchmarks
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: bench
        run: |
          cabal bench --benchmark-options '
            +RTS -T -RTS
            --csv benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            --svg benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.svg
            --baseline benchmarks/baseline_${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            --fail-if-slower 50
            --fail-if-faster 50'

      - uses: actions/upload-artifact@v3
        name: Benchmarks Upload
        if: ${{ failure() && steps.bench.conclusion == 'failure' }}
        with:
          name: bench-artifacts
          path: |
            benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.svg
  stack:
    strategy:
      fail-fast: false
      matrix:
        os:
        - "macos-latest"
        - "ubuntu-latest"
        - "windows-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        with:
          enable-stack: true

      - name: Compile
        run: stack build --ghc-options -Werror

      - name: Test
        run: stack test --ghc-options -Werror
  nix:
    strategy:
      fail-fast: false
      matrix:
        os:
        - "macos-latest"
        - "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Compile & Test
        run: nix build -L
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Formatting
        run: |
          nix run .#format
          git diff --exit-code --color=always

      - name: HLint
        run: nix run .#lint

      # Don't usually want this in CI, but we have this here to test that
      # it actually runs.
      - name: Refactor
        run: nix run .#lintRefactor
